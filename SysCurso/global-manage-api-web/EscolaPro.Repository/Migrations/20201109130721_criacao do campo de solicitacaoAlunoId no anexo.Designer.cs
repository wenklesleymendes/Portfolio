// <auto-generated />
using System;
using EscolaPro.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EscolaPro.Repository.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20201109130721_criacao do campo de solicitacaoAlunoId no anexo")]
    partial class criacaodocampodesolicitacaoAlunoIdnoanexo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EscolaPro.Core.Model.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPFResponsavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ContatoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoCivil")
                        .HasColumnType("int");

                    b.Property<string>("Extensao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("NacionalidadeId")
                        .HasColumnType("int");

                    b.Property<int>("NaturalidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeMae")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeResponsavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgaoExpedicao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RGResponsavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Secao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sexo")
                        .HasColumnType("int");

                    b.Property<string>("TituloEleitoral")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Zona")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContatoId");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("NacionalidadeId");

                    b.HasIndex("NaturalidadeId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("Aluno");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.AlunoQuestionarioProva.AlunoQuestionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlunoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("PerguntaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("PerguntaId");

                    b.ToTable("AlunoQuestionario");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.AlunoQuestionarioProva.AlunoQuestionarioReposta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlunoQuestionarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Opcao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlunoQuestionarioId");

                    b.ToTable("AlunoQuestionarioReposta");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Anexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlunoId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Arquivo")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("ArquivoString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataAnexo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DespesaId")
                        .HasColumnType("int");

                    b.Property<int?>("DestinatarioTicketId")
                        .HasColumnType("int");

                    b.Property<string>("Extensao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FeriasFuncionarioId")
                        .HasColumnType("int");

                    b.Property<int?>("FolhaPagamentoId")
                        .HasColumnType("int");

                    b.Property<int?>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRecusado")
                        .HasColumnType("bit");

                    b.Property<int?>("MatriculaAlunoId")
                        .HasColumnType("int");

                    b.Property<string>("Mensagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MensagemAlunoProfessorId")
                        .HasColumnType("int");

                    b.Property<int?>("MensagemTicketId")
                        .HasColumnType("int");

                    b.Property<int?>("PerguntaId")
                        .HasColumnType("int");

                    b.Property<int?>("PontoEletronicoId")
                        .HasColumnType("int");

                    b.Property<int?>("RespostaId")
                        .HasColumnType("int");

                    b.Property<int?>("SolicitacaoAlunoId")
                        .HasColumnType("int");

                    b.Property<int?>("SolicitacaoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoAnexo")
                        .HasColumnType("int");

                    b.Property<int?>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("DespesaId");

                    b.HasIndex("DestinatarioTicketId");

                    b.HasIndex("FeriasFuncionarioId");

                    b.HasIndex("FolhaPagamentoId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("MatriculaAlunoId");

                    b.HasIndex("MensagemAlunoProfessorId");

                    b.HasIndex("MensagemTicketId");

                    b.HasIndex("PerguntaId");

                    b.HasIndex("PontoEletronicoId");

                    b.HasIndex("RespostaId");

                    b.HasIndex("SolicitacaoId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("Anexo");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.AulasOnline.AulaOnline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NomeAulaOnline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AulaOnline");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.AulasOnline.CursoOnline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AulaOnlineId")
                        .HasColumnType("int");

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AulaOnlineId");

                    b.ToTable("CursoOnline");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.AulasOnline.MateriaOnline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AulaOnlineId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.Property<string>("NomeMateriaOnline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AulaOnlineId");

                    b.ToTable("MateriaOnline");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.AulasOnline.Pergunta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoPergunta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("VideoAulaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VideoAulaId");

                    b.ToTable("Pergunta");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.AulasOnline.Resposta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Correta")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Opcao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PerguntaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PerguntaId");

                    b.ToTable("Resposta");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.AulasOnline.VideoAula", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("MateriaId")
                        .HasColumnType("int");

                    b.Property<int?>("MateriaOnlineId")
                        .HasColumnType("int");

                    b.Property<string>("TituloAula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("URLVideo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MateriaOnlineId");

                    b.ToTable("VideoAula");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.AulasOnline.VideoPausado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataUltimaVisualizacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("MatriculaId")
                        .HasColumnType("int");

                    b.Property<float>("Tempo")
                        .HasColumnType("real");

                    b.Property<string>("URL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("VideoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("VideoPausado");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.BolsaConvenio.Campanha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoPromocao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CursoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("DescontoPlanoPagamento")
                        .HasColumnType("float");

                    b.Property<double>("DescontoTaxaInscricaoProvas")
                        .HasColumnType("float");

                    b.Property<double>("DescontoTaxaMateriaDidatico")
                        .HasColumnType("float");

                    b.Property<double>("DescontoTaxaMatricula")
                        .HasColumnType("float");

                    b.Property<string>("DescricaoCurso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ExigeComprovante")
                        .HasColumnType("bit");

                    b.Property<DateTime>("InicioCampanha")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NomeCampanha")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Parcela")
                        .HasColumnType("int");

                    b.Property<DateTime>("TerminoCampanha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Campanha");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.BolsaConvenio.CampanhaTipoPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CampanhaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CampanhaId");

                    b.ToTable("CampanhaTipoPagamento");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.BolsaConvenio.CampanhaUnidade", b =>
                {
                    b.Property<int>("CampanhaId")
                        .HasColumnType("int");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("CampanhaId", "UnidadeId");

                    b.ToTable("CampanhaUnidade");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.CadastroAluno.Nacionalidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Nacionalidade");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.CadastroAluno.Naturalidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Naturalidade");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.CentroCusto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeId");

                    b.ToTable("CentroCusto");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.ContasPagar.Despesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("CentroCustoId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoBanco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DespesaDARFId")
                        .HasColumnType("int");

                    b.Property<int?>("DespesaGPSId")
                        .HasColumnType("int");

                    b.Property<int?>("FornecedorId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NomeBanco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeDespesa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroAgencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroConta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeParcela")
                        .HasColumnType("int");

                    b.Property<int?>("TipoContaBancaria")
                        .HasColumnType("int");

                    b.Property<int>("TipoDespesa")
                        .HasColumnType("int");

                    b.Property<int>("TipoParcela")
                        .HasColumnType("int");

                    b.Property<int?>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValorTotalDespesa")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("CentroCustoId");

                    b.HasIndex("DespesaDARFId");

                    b.HasIndex("DespesaGPSId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("Despesa");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.ContasPagar.DespesaDARF", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CnpjCpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoReceita")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdentificacaoComprovante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NomeContribuinte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroReferencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PeriodoApuracao")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferenciaEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ValorJurosEncargos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorMulta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorPrincipal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("DespesaDARF");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.ContasPagar.DespesaGPS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("AtualizacaoMonetariaJuroMora")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CodigoPagamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Competencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identificador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentificaçãoComprovante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NomeContribuinte")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenciaEmpresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ValorINSS")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorOutrasEntidades")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorTotalRecolher")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("DespesaGPS");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.ContasPagar.DespesaParcela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoBarras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("DescontoTaxa")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DespesaId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Juros")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("LancamentoManual")
                        .HasColumnType("bit");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusPagamento")
                        .HasColumnType("int");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("int");

                    b.Property<int?>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ValorPago")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorParcela")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DespesaId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("DespesaParcela");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Contato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ComoConheceuEnum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FaceBook")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Instagram")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Ramal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RecebeSMS")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceberEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceberFacebook")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceberInstagram")
                        .HasColumnType("bit");

                    b.Property<bool>("ReceberWhatsApp")
                        .HasColumnType("bit");

                    b.Property<string>("Site")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneFixo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneFixo1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneFixo2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneFixo3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneFixo4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneFixo5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneFixoPrincipal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("WhatsApp")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contato");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.ContratoLocacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NomeImobiliaria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeProprietario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneFixo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefoneProprietario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ValorAluguel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorCondominio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorIPTU")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("VigenciaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VigenciaTermino")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ContratoLocacao");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.ControlePontoEletronico.ArquivoPonto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NomeArquivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ArquivoPonto");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.ControlePontoEletronico.PontoEletronico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ApenasFerias")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Entrada1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Entrada2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Entrada3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Entrada4")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FeriasId")
                        .HasColumnType("int");

                    b.Property<int?>("FolhaPagamentoId")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NomeArquivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroPIS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Pago")
                        .HasColumnType("bit");

                    b.Property<int>("RegimeContratacao")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Saida1")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Saida2")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Saida3")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Saida4")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoOcorrenciaPonto")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("PontoEletronico");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Curso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("NacionatalTec")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Curso");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.CursoTurma.Materia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NomeMateria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.ToTable("Materia");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.DadosBancario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoBanco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NomeBanco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroAgencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroConta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoContaBancaria")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DadosBancario");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.DadosFuncionario.AgenteIntegracao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PessoaContato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Site")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AgenteIntegracao");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.DadosFuncionario.CursoProfessor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("IdCurso")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NomeCurso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("CursoProfessor");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.DadosFuncionario.DadosContratacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CargaCT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CargaHorarioSemanalCT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracaoRegime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataAtestadoAdmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataAtestadoDemissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataEmissaoCT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRecisao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Matricula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroPIS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroTituloEleitor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SecaoTituloEleitor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerieCT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TempoAlmoco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoRegimeContratacao")
                        .HasColumnType("int");

                    b.Property<int?>("TipoRegimeContratacaoAnterior")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ValeAlimentacao")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValeTransporte")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ZonaTituloEleitor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DadosContratacao");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.DadosFuncionario.FeriasFuncionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ApenasFerias")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Inicio")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Termino")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoFeriasFolgaFalta")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("FeriasFuncionario");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.DadosFuncionario.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AgenteIntegracaoId")
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContatoId")
                        .HasColumnType("int");

                    b.Property<int?>("DadosBancarioId")
                        .HasColumnType("int");

                    b.Property<int?>("DadosContratacaoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("JornadaTrabalhoId")
                        .HasColumnType("int");

                    b.Property<int?>("MateriaProfessorId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RG")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AgenteIntegracaoId");

                    b.HasIndex("ContatoId");

                    b.HasIndex("DadosBancarioId");

                    b.HasIndex("DadosContratacaoId");

                    b.HasIndex("EnderecoId");

                    b.HasIndex("JornadaTrabalhoId");

                    b.HasIndex("MateriaProfessorId");

                    b.ToTable("Funcionario");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.DadosFuncionario.JornadaTrabalho", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DomingoInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DomingoTermino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("QuartaFeiraInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuartaFeiraTermino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuintaFeiraInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuintaFeiraTermino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SabadoInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SabadoTermino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundaFeiraInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundaFeiraTermino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SextaFeiraInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SextaFeiraTermino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TercaFeiraInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TercaFeiraTermino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("JornadaTrabalho");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.DadosFuncionario.MateriaCursoProfessor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CursoProfessorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMateria")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NomeMateria")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CursoProfessorId");

                    b.ToTable("MateriaCursoProfessor");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.DadosFuncionario.MateriaProfessor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Artes")
                        .HasColumnType("bit");

                    b.Property<bool>("Biologia")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Filosofia")
                        .HasColumnType("bit");

                    b.Property<bool>("Geografia")
                        .HasColumnType("bit");

                    b.Property<bool>("Historia")
                        .HasColumnType("bit");

                    b.Property<bool>("Ingles")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("LinguaPortuguesa")
                        .HasColumnType("bit");

                    b.Property<bool>("Matematica")
                        .HasColumnType("bit");

                    b.Property<bool>("Quimica")
                        .HasColumnType("bit");

                    b.Property<bool>("Sociologia")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MateriaProfessor");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.DadosFuncionario.SalarioUnidade", b =>
                {
                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescricaoCargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValorSalario")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("FuncionarioId", "UnidadeId");

                    b.ToTable("SalarioUnidade");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Endereco");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.EstoqueProdutos.HistoricoEstoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdEstoque")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("TipoHistorico")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("HistoricoEstoque");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.EstoqueProdutos.ItemProduto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NomeFornecedor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroNotaFiscal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeEntrada")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeSaida")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId");

                    b.ToTable("ItemProduto");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.EstoqueProdutos.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlertaQuantidadeMinima")
                        .HasColumnType("int");

                    b.Property<string>("CodigoInterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoNCM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataEntrada")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NomeProduto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.FolhaPagamentos.FolhaPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Alimentacao")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BancoPagamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("BonusMetaMes")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("BonusMetaPeriodo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ComissaoPrimeiraParcelaPaga")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Competencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("InicioHoraExtraPaga")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("JustificativaDSR")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JustificativaDecimoTerceiro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JustificativaDesconto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JustificativaFerias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JustificativaValorAdicional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("MonitoriaProva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("NomeUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("QuantidadeDias")
                        .HasColumnType("int");

                    b.Property<decimal?>("SalarioBruto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("SalarioLiquido")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StatusPagamento")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TerminoHoraExtraPaga")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Transporte")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("ValorAdicional")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorDecimoTerceiro")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorDiasDSR")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorFerias")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorTotalDesconto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("ValorTotalPagamento")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("FolhaPagamento");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.FolhaPagamentos.HoraExtra", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FolhaPagamentoId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<float>("Porcentagem")
                        .HasColumnType("real");

                    b.Property<string>("QuantidadeHoras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FolhaPagamentoId");

                    b.ToTable("HoraExtra");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Fornecedores.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Fornecedores.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("ContatoId")
                        .HasColumnType("int");

                    b.Property<string>("CpfCnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DadosBancarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InscricaoMunicipal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("Isento")
                        .HasColumnType("bit");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("ContatoId");

                    b.HasIndex("DadosBancarioId");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.HistoricoOcorrencias", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeId");

                    b.ToTable("HistoricoOcorrencias");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.HorarioFuncionamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ComAula")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FinalSemana")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("SabadoInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SabadoTermino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SemanaInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SemanaTermino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeId");

                    b.ToTable("HorarioFuncionamento");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.InstituicaoBancaria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodigoBanco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NomeBanco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("InstituicaoBancaria");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.MetasComissoes.ComissaoParcela", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ComissoesId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("NumeroParcela")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ComissoesId");

                    b.ToTable("ComissaoParcela");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.MetasComissoes.ComissaoUnidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ComissaoUnidade");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.MetasComissoes.Comissoes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataFimVirgencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataInicioVirgencia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("PeriodoIndeterminado")
                        .HasColumnType("bit");

                    b.Property<int>("StatusPagamento")
                        .HasColumnType("int");

                    b.Property<bool>("TipoComissao")
                        .HasColumnType("bit");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("int");

                    b.Property<bool>("TotalParcelas")
                        .HasColumnType("bit");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Comissoes");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.MetasComissoes.DetalhamentoMeta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataPeriodo")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("MetaId")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MetaId");

                    b.ToTable("MetaPeriodo");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.MetasComissoes.Meta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BonusPeriodo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InicioMeta")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int>("StatusPagamento")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TerminoMeta")
                        .HasColumnType("datetime2");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeId");

                    b.ToTable("Meta");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.MetasComissoes.MetaUnidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("MetaId")
                        .HasColumnType("int");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MetaUnidade");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Pagamentos.DadosCartao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcquirersEnum")
                        .HasColumnType("int");

                    b.Property<string>("AnoValidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BandeiraCartao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoAutorizacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("MesValidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePessoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroCartao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantidadeParcela")
                        .HasColumnType("int");

                    b.Property<string>("TID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValorParcela")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTotal")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("DadosCartao");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Pagamentos.EmailEnviado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CorpoEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailPara")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("PagamentoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PagamentoId");

                    b.ToTable("EmailEnviado");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Pagamentos.Pagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("Acrescimo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BoletoHTML")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoBarras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DadosCartaoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataPagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Desconto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("MatriculaId")
                        .HasColumnType("int");

                    b.Property<string>("NossoNumero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroLinhaDigitavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroRegistro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PagamentoIdOld")
                        .HasColumnType("int");

                    b.Property<decimal?>("PromocaoBolsaConvenio")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("SolicitacaoAlunoId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TarifaBanco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("int");

                    b.Property<int>("TipoSituacao")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorPago")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DadosCartaoId");

                    b.ToTable("Pagamento");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.PainelMatricula.CertificadoProva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DataEntregaAluno")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataRecebimentoSuporte")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GDAE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("MatriculaAlunoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MatriculaAlunoId");

                    b.ToTable("CertificadoProva");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.PainelMatricula.MatriculaAluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataMatricula")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NumeroMatricula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PlanoPagamentoAlunoId")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.Property<int?>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("CursoId");

                    b.HasIndex("PlanoPagamentoAlunoId");

                    b.HasIndex("TurmaId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("MatriculaAluno");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.PainelMatricula.PlanoAluno.PlanoPagamentoAluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CampanhaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataPrimeiraParcela")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataSegundaParcela")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("PlanoPagamentoId")
                        .HasColumnType("int");

                    b.Property<bool?>("TemApostila")
                        .HasColumnType("bit");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PlanoPagamentoAluno");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.PainelMatricula.ProvaAluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataProva")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LocalProva")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MatriculaAlunoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoTransporte")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MatriculaAlunoId");

                    b.ToTable("ProvaAluno");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.PainelMatricula.SolicitacaoAluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataSolicitacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("MatriculaAlunoId")
                        .HasColumnType("int");

                    b.Property<int>("MatriculaId")
                        .HasColumnType("int");

                    b.Property<int?>("SolicitacaoEmailId")
                        .HasColumnType("int");

                    b.Property<int>("SolicitacaoId")
                        .HasColumnType("int");

                    b.Property<int>("StatusPagamento")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MatriculaAlunoId");

                    b.HasIndex("SolicitacaoEmailId");

                    b.HasIndex("SolicitacaoId");

                    b.ToTable("SolicitacaoAluno");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Parametro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Chave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Valor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Parametro");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.PerfilUsuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("CadastrarAluno")
                        .HasColumnType("bit");

                    b.Property<bool>("CadastroFornecedor")
                        .HasColumnType("bit");

                    b.Property<bool>("Comunicacao")
                        .HasColumnType("bit");

                    b.Property<bool>("ConsultarAluno")
                        .HasColumnType("bit");

                    b.Property<bool>("ContasAPagar")
                        .HasColumnType("bit");

                    b.Property<bool>("CriacaoPerfil")
                        .HasColumnType("bit");

                    b.Property<bool>("CriacaoUsuario")
                        .HasColumnType("bit");

                    b.Property<bool>("CriarAgendaProva")
                        .HasColumnType("bit");

                    b.Property<bool>("CriarAulaOnline")
                        .HasColumnType("bit");

                    b.Property<bool>("CriarComissoes")
                        .HasColumnType("bit");

                    b.Property<bool>("CriarMeta")
                        .HasColumnType("bit");

                    b.Property<bool>("CursoTurma")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estoque")
                        .HasColumnType("bit");

                    b.Property<bool>("FolhaPagamento")
                        .HasColumnType("bit");

                    b.Property<bool>("HistoricoViagem")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("ListaPassageiros")
                        .HasColumnType("bit");

                    b.Property<bool>("MetaPainel")
                        .HasColumnType("bit");

                    b.Property<bool>("MinhasAulas")
                        .HasColumnType("bit");

                    b.Property<bool>("PlanoPagamento")
                        .HasColumnType("bit");

                    b.Property<bool>("PromocoesBolsaConvenio")
                        .HasColumnType("bit");

                    b.Property<bool>("Relatorios")
                        .HasColumnType("bit");

                    b.Property<string>("SabadoInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SabadoTermino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SemanaInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SemanaTermino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TicketAdministracao")
                        .HasColumnType("bit");

                    b.Property<bool>("TicketPainel")
                        .HasColumnType("bit");

                    b.Property<bool>("Unidade")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PerfilUsuario");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.PlanoPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsentarMaterialDidatico")
                        .HasColumnType("bit");

                    b.Property<bool>("IsentarMatricula")
                        .HasColumnType("bit");

                    b.Property<decimal>("PorcentagemDescontoPontualidade")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("QuantidadeParcela")
                        .HasColumnType("int");

                    b.Property<int>("TipoPagamento")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ValorMaterialDidatico")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorParcela")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTaxaMatricula")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTotalInscricaoProva")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTotalPlano")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PlanoPagamento");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.PlanoPagamentoCurso", b =>
                {
                    b.Property<int>("PlanoPagamentoId")
                        .HasColumnType("int");

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PlanoPagamentoId", "CursoId");

                    b.ToTable("PlanoPagamentoCurso");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.PlanoPagamentoUnidade", b =>
                {
                    b.Property<int>("PlanoPagamentoId")
                        .HasColumnType("int");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("PlanoPagamentoId", "UnidadeId");

                    b.ToTable("PlanoPagamentoUnidade");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.PortalAlunoProfessor.MensagemAlunoProfessor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AlunoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int?>("MatriculaAlunoId")
                        .HasColumnType("int");

                    b.Property<string>("Mensagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<int>("TipoMensagem")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MatriculaAlunoId");

                    b.ToTable("MensagemAlunoProfessor");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Provas.AgendaCurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgendaProvaId")
                        .HasColumnType("int");

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AgendaProvaId");

                    b.HasIndex("CursoId");

                    b.ToTable("AgendaCurso");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Provas.AgendaProva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ColegioAutorizadoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataProva")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InicioInscricao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("QuantidadeVagas")
                        .HasColumnType("int");

                    b.Property<DateTime?>("TerminoInscricao")
                        .HasColumnType("datetime2");

                    b.Property<int>("TipoProva")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ColegioAutorizadoId");

                    b.ToTable("AgendaProva");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Provas.ColegioAutorizado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NomeColegioAutorizado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimeiroContatoEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimeiroContatoNome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimeiroContatoTelefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoContatoEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoContatoNome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoContatoTelefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Site")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EnderecoId");

                    b.ToTable("ColegioAutorizado");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Provas.UnidadeParticipanteProva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AgendaProvaId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("HoraSaida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("LocalSaida")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AgendaProvaId");

                    b.ToTable("UnidadeParticipanteProva");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Solicitacoes.EmailDestinatario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("SolicitacaoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SolicitacaoId");

                    b.ToTable("EmailDestinatario");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Solicitacoes.Solicitacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CentroCustoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailConteudo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailTitulo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EnviaEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("EnviaTicket")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAnexo")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAprovadoProva")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBalcao")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCursoQuitado")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPendenciaDocumental")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPreDefinida")
                        .HasColumnType("bit");

                    b.Property<int?>("QuantidadeParcelaPaga")
                        .HasColumnType("int");

                    b.Property<int>("TipoSolicitacao")
                        .HasColumnType("int");

                    b.Property<int?>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CentroCustoId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("Solicitacao");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Solicitacoes.SolicitacaoCurso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<int>("SolicitacaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CursoId");

                    b.HasIndex("SolicitacaoId");

                    b.ToTable("SolicitacaoCurso");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Solicitacoes.SolicitacaoEmail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CorpoEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("SolicitacaoEmail");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Solicitacoes.SolicitacaoFuncionarioTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("SolicitacaoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("SolicitacaoId");

                    b.ToTable("SolicitacaoFuncionarioTicket");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Solicitacoes.StatusCertificado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("SolicitacaoId")
                        .HasColumnType("int");

                    b.Property<int>("StatusCertificadoEnum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SolicitacaoId");

                    b.ToTable("StatusCertificado");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Solicitacoes.StatusProva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("SolicitacaoId")
                        .HasColumnType("int");

                    b.Property<int>("StatusProvaEnum")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("SolicitacaoId");

                    b.ToTable("StatusProva");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Tickets.AssuntoTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("TempoEmDias")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AssuntoTicket");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Tickets.DestinatarioTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataAtendimento")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Mensagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusTicket")
                        .HasColumnType("int");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<int?>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioLogadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("TicketId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("DestinatarioTicket");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Tickets.MensagemTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Mensagem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TicketId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FuncionarioId");

                    b.ToTable("MensagemTicket");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Tickets.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssuntoTicketId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAbertura")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataAtendimento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdFuncionarioAtendente")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NumeroProtocolo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UsuarioLogadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AssuntoTicketId");

                    b.ToTable("Ticket");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Tickets.UsuarioDestinarioTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DestinatarioTicketId")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DestinatarioTicketId");

                    b.ToTable("UsuarioDestinarioTicket");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Turma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ano")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Disponivel")
                        .HasColumnType("bit");

                    b.Property<bool>("Domingo")
                        .HasColumnType("bit");

                    b.Property<string>("HorarioInicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HorarioTermino")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("InicioTurma")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("Periodo")
                        .HasColumnType("int");

                    b.Property<bool>("Presencial")
                        .HasColumnType("bit");

                    b.Property<int>("QuantidadeVagas")
                        .HasColumnType("int");

                    b.Property<bool>("Quarta")
                        .HasColumnType("bit");

                    b.Property<bool>("Quinta")
                        .HasColumnType("bit");

                    b.Property<bool>("Sabado")
                        .HasColumnType("bit");

                    b.Property<int>("Sala")
                        .HasColumnType("int");

                    b.Property<bool>("Segunda")
                        .HasColumnType("bit");

                    b.Property<string>("Semestre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Sexta")
                        .HasColumnType("bit");

                    b.Property<bool>("Terca")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("TerminoTurma")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Turma");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.TurmaCurso", b =>
                {
                    b.Property<int>("TurmaId")
                        .HasColumnType("int");

                    b.Property<int>("CursoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("TurmaId", "CursoId");

                    b.ToTable("TurmaCurso");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.TurmaUnidade", b =>
                {
                    b.Property<int?>("TurmaId")
                        .HasColumnType("int");

                    b.Property<int?>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("TurmaId", "UnidadeId");

                    b.ToTable("TurmaUnidade");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Unidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContatoId")
                        .HasColumnType("int");

                    b.Property<int?>("ContratoLocacaoId")
                        .HasColumnType("int");

                    b.Property<int?>("DadosBancarioId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("EnderecoId")
                        .HasColumnType("int");

                    b.Property<string>("Extensao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Foto")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeFantasia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sigla")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VigenciaInicioAVCB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VigenciaInicioAlvara")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VigenciaTerminoAVCB")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("VigenciaTerminoAlvara")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ContatoId");

                    b.HasIndex("ContratoLocacaoId");

                    b.HasIndex("DadosBancarioId");

                    b.HasIndex("EnderecoId");

                    b.ToTable("Unidade");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.UnidadeDespesa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<int>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("UnidadeId");

                    b.ToTable("UnidadeDespesa");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlunoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<int?>("FuncionarioId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAluno")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrimeiroAcesso")
                        .HasColumnType("bit");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PerfilUsuarioId")
                        .HasColumnType("int");

                    b.Property<int?>("UnidadeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AlunoId");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("FuncionarioId");

                    b.HasIndex("PerfilUsuarioId");

                    b.HasIndex("UnidadeId");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Aluno", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Contato", "Contato")
                        .WithMany()
                        .HasForeignKey("ContatoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EscolaPro.Core.Model.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EscolaPro.Core.Model.CadastroAluno.Nacionalidade", "Nacionalidade")
                        .WithMany()
                        .HasForeignKey("NacionalidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EscolaPro.Core.Model.CadastroAluno.Naturalidade", "Naturalidade")
                        .WithMany()
                        .HasForeignKey("NaturalidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EscolaPro.Core.Model.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.AlunoQuestionarioProva.AlunoQuestionario", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Aluno", null)
                        .WithMany("AlunoQuestionario")
                        .HasForeignKey("AlunoId");

                    b.HasOne("EscolaPro.Core.Model.AulasOnline.Pergunta", "Pergunta")
                        .WithMany()
                        .HasForeignKey("PerguntaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.AlunoQuestionarioProva.AlunoQuestionarioReposta", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.AlunoQuestionarioProva.AlunoQuestionario", null)
                        .WithMany("AlunoQuestionarioReposta")
                        .HasForeignKey("AlunoQuestionarioId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Anexo", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Aluno", null)
                        .WithMany("Anexo")
                        .HasForeignKey("AlunoId");

                    b.HasOne("EscolaPro.Core.Model.ContasPagar.Despesa", null)
                        .WithMany("Documentos")
                        .HasForeignKey("DespesaId");

                    b.HasOne("EscolaPro.Core.Model.Tickets.DestinatarioTicket", null)
                        .WithMany("Anexo")
                        .HasForeignKey("DestinatarioTicketId");

                    b.HasOne("EscolaPro.Core.Model.DadosFuncionario.FeriasFuncionario", null)
                        .WithMany("Anexo")
                        .HasForeignKey("FeriasFuncionarioId");

                    b.HasOne("EscolaPro.Core.Model.FolhaPagamentos.FolhaPagamento", null)
                        .WithMany("ReciboComprovanteBancario")
                        .HasForeignKey("FolhaPagamentoId");

                    b.HasOne("EscolaPro.Core.Model.Fornecedores.Fornecedor", null)
                        .WithMany("Documentos")
                        .HasForeignKey("FornecedorId");

                    b.HasOne("EscolaPro.Core.Model.DadosFuncionario.Funcionario", null)
                        .WithMany("Documentos")
                        .HasForeignKey("FuncionarioId");

                    b.HasOne("EscolaPro.Core.Model.PainelMatricula.MatriculaAluno", null)
                        .WithMany("Documentos")
                        .HasForeignKey("MatriculaAlunoId");

                    b.HasOne("EscolaPro.Core.Model.PortalAlunoProfessor.MensagemAlunoProfessor", null)
                        .WithMany("Anexo")
                        .HasForeignKey("MensagemAlunoProfessorId");

                    b.HasOne("EscolaPro.Core.Model.Tickets.MensagemTicket", null)
                        .WithMany("Anexo")
                        .HasForeignKey("MensagemTicketId");

                    b.HasOne("EscolaPro.Core.Model.AulasOnline.Pergunta", null)
                        .WithMany("Imagem")
                        .HasForeignKey("PerguntaId");

                    b.HasOne("EscolaPro.Core.Model.ControlePontoEletronico.PontoEletronico", null)
                        .WithMany("Anexo")
                        .HasForeignKey("PontoEletronicoId");

                    b.HasOne("EscolaPro.Core.Model.AulasOnline.Resposta", null)
                        .WithMany("Imagem")
                        .HasForeignKey("RespostaId");

                    b.HasOne("EscolaPro.Core.Model.Solicitacoes.Solicitacao", null)
                        .WithMany("Anexo")
                        .HasForeignKey("SolicitacaoId");

                    b.HasOne("EscolaPro.Core.Model.Unidade", null)
                        .WithMany("Anexo")
                        .HasForeignKey("UnidadeId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.AulasOnline.CursoOnline", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.AulasOnline.AulaOnline", null)
                        .WithMany("Curso")
                        .HasForeignKey("AulaOnlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.AulasOnline.MateriaOnline", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.AulasOnline.AulaOnline", null)
                        .WithMany("Materia")
                        .HasForeignKey("AulaOnlineId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.AulasOnline.Pergunta", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.AulasOnline.VideoAula", null)
                        .WithMany("Pergunta")
                        .HasForeignKey("VideoAulaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.AulasOnline.Resposta", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.AulasOnline.Pergunta", "Pergunta")
                        .WithMany("Resposta")
                        .HasForeignKey("PerguntaId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.AulasOnline.VideoAula", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.AulasOnline.MateriaOnline", null)
                        .WithMany("VideoAula")
                        .HasForeignKey("MateriaOnlineId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.BolsaConvenio.CampanhaTipoPagamento", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.BolsaConvenio.Campanha", null)
                        .WithMany("CampanhaTipoPagamento")
                        .HasForeignKey("CampanhaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.BolsaConvenio.CampanhaUnidade", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.BolsaConvenio.Campanha", null)
                        .WithMany("CampanhaUnidade")
                        .HasForeignKey("CampanhaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.CentroCusto", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Unidade", null)
                        .WithMany("CentroCusto")
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.ContasPagar.Despesa", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Fornecedores.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.HasOne("EscolaPro.Core.Model.CentroCusto", "CentroCusto")
                        .WithMany()
                        .HasForeignKey("CentroCustoId");

                    b.HasOne("EscolaPro.Core.Model.ContasPagar.DespesaDARF", "DespesaDARF")
                        .WithMany()
                        .HasForeignKey("DespesaDARFId");

                    b.HasOne("EscolaPro.Core.Model.ContasPagar.DespesaGPS", "DespesaGPS")
                        .WithMany()
                        .HasForeignKey("DespesaGPSId");

                    b.HasOne("EscolaPro.Core.Model.Fornecedores.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId");

                    b.HasOne("EscolaPro.Core.Model.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.ContasPagar.DespesaParcela", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.ContasPagar.Despesa", null)
                        .WithMany("DespesaParcela")
                        .HasForeignKey("DespesaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EscolaPro.Core.Model.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.ControlePontoEletronico.PontoEletronico", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.DadosFuncionario.Funcionario", null)
                        .WithMany("PontoEletronico")
                        .HasForeignKey("FuncionarioId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.CursoTurma.Materia", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Curso", null)
                        .WithMany("Materia")
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.DadosFuncionario.CursoProfessor", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.DadosFuncionario.Funcionario", null)
                        .WithMany("CursoProfessor")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.DadosFuncionario.FeriasFuncionario", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.DadosFuncionario.Funcionario", null)
                        .WithMany("Ferias")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.DadosFuncionario.Funcionario", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.DadosFuncionario.AgenteIntegracao", "AgenteIntegracao")
                        .WithMany()
                        .HasForeignKey("AgenteIntegracaoId");

                    b.HasOne("EscolaPro.Core.Model.Contato", "Contato")
                        .WithMany()
                        .HasForeignKey("ContatoId");

                    b.HasOne("EscolaPro.Core.Model.DadosBancario", "DadosBancario")
                        .WithMany()
                        .HasForeignKey("DadosBancarioId");

                    b.HasOne("EscolaPro.Core.Model.DadosFuncionario.DadosContratacao", "DadosContratacao")
                        .WithMany()
                        .HasForeignKey("DadosContratacaoId");

                    b.HasOne("EscolaPro.Core.Model.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");

                    b.HasOne("EscolaPro.Core.Model.DadosFuncionario.JornadaTrabalho", "JornadaTrabalho")
                        .WithMany()
                        .HasForeignKey("JornadaTrabalhoId");

                    b.HasOne("EscolaPro.Core.Model.DadosFuncionario.MateriaProfessor", "MateriaProfessor")
                        .WithMany()
                        .HasForeignKey("MateriaProfessorId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.DadosFuncionario.MateriaCursoProfessor", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.DadosFuncionario.CursoProfessor", null)
                        .WithMany("MateriaCursoProfessor")
                        .HasForeignKey("CursoProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.DadosFuncionario.SalarioUnidade", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.DadosFuncionario.Funcionario", null)
                        .WithMany("SalarioUnidade")
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.EstoqueProdutos.ItemProduto", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.EstoqueProdutos.Produto", null)
                        .WithMany("ItemProduto")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.EstoqueProdutos.Produto", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.FolhaPagamentos.FolhaPagamento", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.DadosFuncionario.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.FolhaPagamentos.HoraExtra", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.FolhaPagamentos.FolhaPagamento", null)
                        .WithMany("HoraExtra")
                        .HasForeignKey("FolhaPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Fornecedores.Fornecedor", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Fornecedores.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId");

                    b.HasOne("EscolaPro.Core.Model.Contato", "Contato")
                        .WithMany()
                        .HasForeignKey("ContatoId");

                    b.HasOne("EscolaPro.Core.Model.DadosBancario", "DadosBancario")
                        .WithMany()
                        .HasForeignKey("DadosBancarioId");

                    b.HasOne("EscolaPro.Core.Model.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.HistoricoOcorrencias", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Unidade", null)
                        .WithMany("HistoricoOcorrencias")
                        .HasForeignKey("UnidadeId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.HorarioFuncionamento", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Unidade", null)
                        .WithMany("HorarioFuncionamento")
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.MetasComissoes.ComissaoParcela", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.MetasComissoes.Comissoes", null)
                        .WithMany("ComissaoParcelas")
                        .HasForeignKey("ComissoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.MetasComissoes.DetalhamentoMeta", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.MetasComissoes.Meta", null)
                        .WithMany("DetalhamentoMeta")
                        .HasForeignKey("MetaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.MetasComissoes.Meta", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Pagamentos.EmailEnviado", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Pagamentos.Pagamento", null)
                        .WithMany("EmailEnviado")
                        .HasForeignKey("PagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Pagamentos.Pagamento", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Pagamentos.DadosCartao", "DadosCartao")
                        .WithMany()
                        .HasForeignKey("DadosCartaoId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.PainelMatricula.CertificadoProva", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.PainelMatricula.MatriculaAluno", null)
                        .WithMany("Certificado")
                        .HasForeignKey("MatriculaAlunoId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.PainelMatricula.MatriculaAluno", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EscolaPro.Core.Model.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EscolaPro.Core.Model.PainelMatricula.PlanoAluno.PlanoPagamentoAluno", "PlanoPagamentoAluno")
                        .WithMany()
                        .HasForeignKey("PlanoPagamentoAlunoId");

                    b.HasOne("EscolaPro.Core.Model.Turma", "Turma")
                        .WithMany()
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EscolaPro.Core.Model.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.PainelMatricula.ProvaAluno", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.PainelMatricula.MatriculaAluno", null)
                        .WithMany("ProvaAluno")
                        .HasForeignKey("MatriculaAlunoId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.PainelMatricula.SolicitacaoAluno", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.PainelMatricula.MatriculaAluno", null)
                        .WithMany("SolicitacaoAluno")
                        .HasForeignKey("MatriculaAlunoId");

                    b.HasOne("EscolaPro.Core.Model.Solicitacoes.SolicitacaoEmail", "SolicitacaoEmail")
                        .WithMany()
                        .HasForeignKey("SolicitacaoEmailId");

                    b.HasOne("EscolaPro.Core.Model.Solicitacoes.Solicitacao", "Solicitacao")
                        .WithMany()
                        .HasForeignKey("SolicitacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.PlanoPagamentoCurso", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.PlanoPagamento", null)
                        .WithMany("PlanoPagamentoCurso")
                        .HasForeignKey("PlanoPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.PlanoPagamentoUnidade", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.PlanoPagamento", null)
                        .WithMany("PlanoPagamentoUnidade")
                        .HasForeignKey("PlanoPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.PortalAlunoProfessor.MensagemAlunoProfessor", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.PainelMatricula.MatriculaAluno", null)
                        .WithMany("Mensagens")
                        .HasForeignKey("MatriculaAlunoId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Provas.AgendaCurso", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Provas.AgendaProva", null)
                        .WithMany("AgendaCurso")
                        .HasForeignKey("AgendaProvaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EscolaPro.Core.Model.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Provas.AgendaProva", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Provas.ColegioAutorizado", "ColegioAutorizado")
                        .WithMany()
                        .HasForeignKey("ColegioAutorizadoId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Provas.ColegioAutorizado", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Provas.UnidadeParticipanteProva", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Provas.AgendaProva", null)
                        .WithMany("UnidadeParticipanteProva")
                        .HasForeignKey("AgendaProvaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Solicitacoes.EmailDestinatario", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Solicitacoes.Solicitacao", null)
                        .WithMany("EmailDestinatario")
                        .HasForeignKey("SolicitacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Solicitacoes.Solicitacao", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.CentroCusto", "CentroCusto")
                        .WithMany()
                        .HasForeignKey("CentroCustoId");

                    b.HasOne("EscolaPro.Core.Model.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Solicitacoes.SolicitacaoCurso", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Curso", "Curso")
                        .WithMany()
                        .HasForeignKey("CursoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EscolaPro.Core.Model.Solicitacoes.Solicitacao", null)
                        .WithMany("SolicitacaoCurso")
                        .HasForeignKey("SolicitacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Solicitacoes.SolicitacaoFuncionarioTicket", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.DadosFuncionario.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EscolaPro.Core.Model.Solicitacoes.Solicitacao", null)
                        .WithMany("SolicitacaoFuncionarioTicket")
                        .HasForeignKey("SolicitacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Solicitacoes.StatusCertificado", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Solicitacoes.Solicitacao", null)
                        .WithMany("StatusCertificado")
                        .HasForeignKey("SolicitacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Solicitacoes.StatusProva", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Solicitacoes.Solicitacao", null)
                        .WithMany("StatusProvaEnum")
                        .HasForeignKey("SolicitacaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Tickets.DestinatarioTicket", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.CentroCusto", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId");

                    b.HasOne("EscolaPro.Core.Model.Tickets.Ticket", null)
                        .WithMany("DestinatarioTicket")
                        .HasForeignKey("TicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EscolaPro.Core.Model.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Tickets.MensagemTicket", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.DadosFuncionario.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Tickets.Ticket", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Tickets.AssuntoTicket", "AssuntoTicket")
                        .WithMany()
                        .HasForeignKey("AssuntoTicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Tickets.UsuarioDestinarioTicket", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Tickets.DestinatarioTicket", null)
                        .WithMany("UsuarioDestinarioTicket")
                        .HasForeignKey("DestinatarioTicketId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.TurmaCurso", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Turma", null)
                        .WithMany("TurmaCurso")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.TurmaUnidade", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Turma", null)
                        .WithMany("TurmaUnidade")
                        .HasForeignKey("TurmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Unidade", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Contato", "Contato")
                        .WithMany()
                        .HasForeignKey("ContatoId");

                    b.HasOne("EscolaPro.Core.Model.ContratoLocacao", "ContratoLocacao")
                        .WithMany()
                        .HasForeignKey("ContratoLocacaoId");

                    b.HasOne("EscolaPro.Core.Model.DadosBancario", "DadosBancario")
                        .WithMany()
                        .HasForeignKey("DadosBancarioId");

                    b.HasOne("EscolaPro.Core.Model.Endereco", "Endereco")
                        .WithMany()
                        .HasForeignKey("EnderecoId");
                });

            modelBuilder.Entity("EscolaPro.Core.Model.UnidadeDespesa", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Unidade", null)
                        .WithMany("UnidadeDespesas")
                        .HasForeignKey("UnidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EscolaPro.Core.Model.Usuario", b =>
                {
                    b.HasOne("EscolaPro.Core.Model.Aluno", "Aluno")
                        .WithMany()
                        .HasForeignKey("AlunoId");

                    b.HasOne("EscolaPro.Core.Model.CentroCusto", "Departamento")
                        .WithMany()
                        .HasForeignKey("DepartamentoId");

                    b.HasOne("EscolaPro.Core.Model.DadosFuncionario.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId");

                    b.HasOne("EscolaPro.Core.Model.PerfilUsuario", "PerfilUsuario")
                        .WithMany()
                        .HasForeignKey("PerfilUsuarioId");

                    b.HasOne("EscolaPro.Core.Model.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeId");
                });
#pragma warning restore 612, 618
        }
    }
}
